"$schema" = 'https://starship.rs/config-schema.json'

format = '$time$sudo$directory$hg_branch$git_branch$git_status$git_metrics$git_state$git_commit$package$nodejs$docker_context$golang$deno$php$python$ruby$rust$line_break$jobs$status$character'

right_format = '$memory_usage$cmd_duration'

continuation_prompt = '[ › ](bright-black) '
scan_timeout = 2_000
command_timeout = 1_500
add_newline = true


[time]
disabled = false
format = '([$time]($style) ⌚ )'
style = 'blue dimmed'
use_12hr = true
utc_time_offset = 'local'
time_range = '-'

[git_branch]
disabled = false
format = '([·](dimmed $style) [$symbol$branch(:$remote_branch)]($style) )'
symbol = ' '
style = 'bold purple'
truncation_length = 9223372036854775807
truncation_symbol = '…'
only_attached = false
always_show_remote = false
ignore_branches = []

[git_commit]
disabled = false
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = 'green bold'
only_detached = true
tag_symbol = ' 🏷  '
tag_disabled = false

[git_metrics]
disabled = false
added_style = 'bold green'
deleted_style = 'bold red'
only_nonzero_diffs = true
format = '([\(](dimmed bright-black)([+$added]($added_style) )([-$deleted]($deleted_style))[\)](dimmed bright-black) )'

[git_state]
disabled = false
rebase = 'REBASING'
merge = 'Ⓜ️ '
revert = '⏮ '
cherry_pick = '🍒 '
bisect = '🔀 '
am = 'AM'
am_or_rebase = 'AM/REBASE'
style = 'bold yellow'
format = '\([$state( $progress_current/$progress_total)]($style)\) '

[git_status]
disabled = false
format = '([[\[](dimmed $style)$all_status$ahead_behind[\]](dimmed $style)]($style) )'
style = 'red bold'
stashed = '\$'
ahead = '⇡'
behind = '⇣'
up_to_date = ''
diverged = '⇕'
conflicted = '='
deleted = '✘'
renamed = '»'
modified = '!'
staged = '+'
untracked = '?'
ignore_submodules = false

[status]
disabled = false
format = '[$symbol $status]($style) '
symbol = '✖'
success_symbol = ''
not_executable_symbol = '🚫'
not_found_symbol = '🔍'
sigint_symbol = '🧱'
signal_symbol = '⚡'
style = 'bold red'
map_symbol = false
recognize_signal_code = true
pipestatus = false
pipestatus_separator = '|'
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'

[character]
disabled = false
format = '$symbol '
success_symbol = '[❯](bold green)'
error_symbol = '[❯](bold red)'

[cmd_duration]
disabled = false
show_notifications = false
show_milliseconds = true
min_time = 2000
format = '(· [$duration]($style) )'
style = 'yellow bold'
min_time_to_notify = 45000

[directory]
disabled = false
truncate_to_repo = true
fish_style_pwd_dir_length = 4
use_logical_path = true
format = '[$path]($style)[$read_only]($read_only_style) '
repo_root_format = '[$before_root_path]($style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) '
style = 'cyan bold'
read_only = '🔒'
read_only_style = 'red'
truncation_symbol = '…'
# home_symbol = '🏠'
use_os_path_sep = true

[directory.substitutions]

[memory_usage]
threshold = 30
format = '(· $symbol[$ram]($style) )'
style = 'white bold dimmed'
symbol = '🐏 '
disabled = false

[line_break]
disabled = false

[localip]
disabled = false
ssh_only = true
format = '[$localipv4]($style) '
style = 'yellow bold'

[shlvl]
disabled = false
threshold = 2
format = '[$symbol$shlvl]($style) '
symbol = '↕️  '
repeat = false
style = 'bold yellow'

[package]
disabled = false
format = '( $symbol[$version](underline $style) )'
symbol = '📦 '
style = '99'
display_private = true
version_format = '${raw}'

[container]
disabled = false
format = '[$symbol \[$name\]]($style) '
symbol = '🫙'
style = 'red bold dimmed'

[hostname]
ssh_only = true
disabled = false
trim_at = '.'
format = '[$hostname]($style) '
style = 'green dimmed bold'

[nodejs]
disabled = false
format = '([·](dimmed $style) [[$symbol]($style)($version )](dimmed $style))'
version_format = '${raw}'
symbol = '⬢ '
style = 'bright-green'
not_capable_style = 'bold red'
detect_extensions = [
    'js',
    'mjs',
    'cjs',
    'ts',
    'mts',
    'cts',
    'jsx',
    'tsx',
    'd.ts',
]
detect_files = ['package.json', '.node-version', '.nvmrc']
detect_folders = ['node_modules']

[golang]
disabled = false
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '🐹 '
style = 'bold cyan'
detect_extensions = ['go']
detect_files = [
    'go.mod',
    'go.sum',
    'glide.yaml',
    'Gopkg.yml',
    'Gopkg.lock',
    '.go-version',
]
detect_folders = ['Godeps']

[ruby]
disabled = true
format = '· [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '💎 '
style = 'bold red'
detect_extensions = ['rb']
detect_files = ['Gemfile', '.ruby-version']
detect_folders = []
detect_variables = ['RUBY_VERSION', 'RBENV_VERSION']

[rust]
disabled = false
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '🦀 '
style = 'bold red'
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []


[php]
disabled = false
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '🐘 '
style = '147 bold'
detect_extensions = ['php']
detect_files = ['composer.json', '.php-version']
detect_folders = []

[python]
disabled = false
pyenv_version_name = false
pyenv_prefix = 'pyenv '
python_binary = ['python', 'python3', 'python2']
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = 'v${raw}'
style = 'yellow bold'
symbol = '🐍 '
detect_extensions = ['py']
detect_files = [
    'requirements.txt',
    '.python-version',
    'pyproject.toml',
    'Pipfile',
    'tox.ini',
    'setup.py',
    '__init__.py',
]
detect_folders = []

[deno]
disabled = false
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '🦕 '
style = 'green bold'
detect_extensions = []
detect_files = [
    'deno.json',
    'deno.jsonc',
    'mod.ts',
    'deps.ts',
    'mod.js',
    'deps.js',
]
detect_folders = []

[docker_context]
disabled = false
symbol = '🐳 '
style = 'blue bold'
format = 'via [$symbol$context]($style) '
only_with_files = true
detect_extensions = []
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
detect_folders = []

[kubernetes]
symbol = '☸ '
format = '[$symbol$context( \($namespace\))]($style) in '
style = 'cyan bold'
disabled = false
[kubernetes.context_aliases]

[swift]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '🐦 '
style = 'bold 202'
disabled = false
detect_extensions = ['swift']
detect_files = ['Package.swift']
detect_folders = []

[terraform]
format = 'via [$symbol$workspace]($style) '
version_format = 'v${raw}'
symbol = '💠 '
style = 'bold 105'
disabled = false
detect_extensions = ['tf', 'tfplan', 'tfstate']
detect_files = []
detect_folders = ['.terraform']

[aws]
disabled = false
format = 'on [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = '☁️  '
style = 'bold yellow'
expiration_symbol = 'X'
force_display = false
[aws.region_aliases]
[aws.profile_aliases]

[cmake]
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = '△ '
style = 'bold blue'
disabled = false
detect_extensions = []
detect_files = ['CMakeLists.txt', 'CMakeCache.txt']
detect_folders = []

[elixir]
format = 'via [$symbol($version \(OTP $otp_version\) )]($style)'
version_format = 'v${raw}'
symbol = '💧 '
style = 'bold purple'
disabled = false
detect_extensions = []
detect_files = ['mix.exs']
detect_folders = []

[fill]
style = 'bold black'
symbol = '.'
disabled = false

[java]
disabled = false
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
style = 'red dimmed'
symbol = '☕ '
detect_extensions = ['java', 'class', 'jar', 'gradle', 'clj', 'cljc']
detect_files = [
    'pom.xml',
    'build.gradle.kts',
    'build.sbt',
    '.java-version',
    'deps.edn',
    'project.clj',
    'build.boot',
]
detect_folders = []

[username]
disabled = true
format = '[$user]($style) '
style_root = 'red bold'
style_user = 'yellow bold'
show_always = false

[sudo]
disabled = true

[azure]
disabled = true

[cobol]
disabled = true

[conda]
disabled = true

[crystal]
disabled = true

[dart]
disabled = true

[dotnet]
disabled = true

[elm]
disabled = true

[erlang]
disabled = true

[gcloud]
disabled = true

[haskell]
disabled = true

[helm]
disabled = true

[hg_branch]
disabled = true

[julia]
disabled = true

[kotlin]
disabled = true

[lua]
disabled = true

[nim]
disabled = true

[nix_shell]
disabled = true

[ocaml]
disabled = true

[openstack]
disabled = true

[perl]
disabled = true

[pulumi]
disabled = true

[purescript]
disabled = true

[red]
disabled = true

[scala]
disabled = true

[singularity]
disabled = true

[vagrant]
disabled = true

[vcsh]
disabled = true

[vlang]
disabled = true

[zig]
disabled = true
